import express from "express";
import { addFood, listFood, removeFood,getFoodByCategory} from "../controllers/foodController.js";
import FoodModel from "../models/foodModel.js"; // ðŸ†• import thÃªm model
import multer from "multer";

const foodRouter = express.Router();

// Cáº¥u hÃ¬nh multer Ä‘á»ƒ upload áº£nh
const storage = multer.diskStorage({
    destination: "uploads",
    filename: (req, file, cb) => {
        return cb(null, `${Date.now()}${file.originalname}`);
    }
});

const upload = multer({ storage: storage });

// ROUTES chÃ­nh
foodRouter.post("/add", upload.single("image"), addFood);
foodRouter.get("/list", listFood);
foodRouter.post("/remove", removeFood);
// API láº¥y sáº£n pháº©m cÃ¹ng category (trá»« sáº£n pháº©m Ä‘ang xem)
foodRouter.get("/category/:category/:excludeId", getFoodByCategory);

// ðŸ†• API GET /api/food/:id â€” Láº¥y chi tiáº¿t mÃ³n Äƒn theo ID
foodRouter.get("/:id", async (req, res) => {
    try {
        const food = await FoodModel.findById(req.params.id);
        if (!food) {
            return res.status(404).json({ message: "Product not found" });
        }
        res.json(food);
    } catch (error) {
        console.error("Error fetching product:", error);
        res.status(500).json({ message: "Server error" });
    }
});

// ðŸ†• API POST /api/food/update â€” Cáº­p nháº­t thÃ´ng tin mÃ³n Äƒn
foodRouter.post('/update', async (req, res) => {
    try {
      const { id, name, category, price, description } = req.body;
      await FoodModel.findByIdAndUpdate(id, { name, category, price, description });
      res.json({ success: true, message: 'Updated successfully' });
    } catch (error) {
      res.json({ success: false, message: 'Update failed' });
    }
  });
  
  

export default foodRouter;
